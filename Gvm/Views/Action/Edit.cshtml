@model Turkok.Model.Action
@{
    ViewBag.Title = "Duzenle";
}
<aside class="right-side">
    <section class="content-header">
        <h1> Faaliyet Duzenle</h1>
    </section>

    <section class="content">
        <div class="row">
            <div class="col-md-12">
                <div class="well well-sm">
                    @using (Html.BeginForm())
                    {
                        @Html.AntiForgeryToken()

                        @Html.HiddenFor(model => model.Id)

                        <div class="form-horizontal">
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            <div class="form-group">
                                @Html.LabelFor(model => model.Name, new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.ActionId, new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.ActionId, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.ActionId, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            
                            <div class="form-group">
                                <label class="control-label col-md-2" for="DeptChargedId">Sorumlu Birim</label>
                                <div class="col-md-10">
                                    @Html.DropDownList("DeptChargedId", null,  new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.DeptChargedId, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            
                            <div class="form-group">
                                @Html.LabelFor(model => model.SupportUnit, new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.SupportUnit, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.SupportUnit, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            
                            <div class="form-group">
                                @Html.LabelFor(model => model.Collaborators, new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.TextAreaFor(model => model.Collaborators, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.Collaborators, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            
                            <div class="form-group">
                                @Html.LabelFor(model => model.IndicatorName, new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.TextAreaFor(model => model.IndicatorName, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.IndicatorName, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.IndicatorCurrentState, new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.TextAreaFor(model => model.IndicatorCurrentState, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.IndicatorCurrentState, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            
                            <div class="form-group">
                                @Html.LabelFor(model => model.IndicatorObjective, new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.TextAreaFor(model => model.IndicatorObjective, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.IndicatorObjective, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            
                            <div class="form-group">
                                @Html.LabelFor(model => model.IndicatorOccurrenceValue, new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.TextAreaFor(model => model.IndicatorOccurrenceValue, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.IndicatorOccurrenceValue, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.StartDate, new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @(Html.Kendo().DatePicker()
                                          .Name("StartDate")
                                          .Value(Model.StartDate.ToShortDateString())
                                          )
                                </div>
                            </div>
                            
                            <div class="form-group">
                                @Html.LabelFor(model => model.EndDate, new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @(Html.Kendo().DatePicker()
                                          .Name("EndDate")
                                          .Value(Model.EndDate.ToShortDateString())
                                          )
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Description, new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.TextAreaFor(model => model.Description, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                <div class="col-md-offset-2 col-md-10">
                                    <input type="submit" value="Kaydet" class="btn btn-default" />
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </section>
</aside>